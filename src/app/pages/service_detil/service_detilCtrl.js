/** * Created by sorcerer on 2017/10/25. */(function () {    'use strict';    angular.module('BlurAdmin.pages.servicedetil')        .controller('servicedetilCtrl', servicedetilCtrl);    /** @ngInject */    function servicedetilCtrl(mydc,$scope,Service,$rootScope,Route,Cookie,ReplicationController,$stateParams,Event,Ws,Pod) {        //console.log('mydc', mydc);        $scope.$on('$destroy', function () {            Ws.clear();        });        $rootScope.namespace=Cookie.get('namespace');        $scope.dc=angular.copy(mydc);        $scope.status={            text:'部署'        }        if ($scope.dc.spec.replicas === 0) {            $scope.status.text='启动'        }else {            $scope.status.text='停止'        }        $scope.resourceVersion = $scope.dc.metadata.resourceVersion;        var watchdcs = function (resourceVersion) {            Ws.watch({                api: 'other',                resourceVersion: resourceVersion,                namespace: $rootScope.namespace,                type: 'deploymentconfigs',                name: ''            }, function (res) {                var data = JSON.parse(res.data);                updatedcs(data);            }, function () {                //$log.info("webSocket start");            }, function () {                //$log.info("webSocket stop");                var key = Ws.key($rootScope.namespace, 'deploymentconfigs', '');                if (!$rootScope.watches[key] || $rootScope.watches[key].shouldClose) {                    return;                }            });        };        watchdcs($scope.resourceVersion);        var updatedcs = function (data) {            if (data.type == 'ERROR') {                //$log.info("err", data.object.message);                Ws.clear();                return;            }            $scope.resourceVersion = data.object.metadata.resourceVersion;            if (data.type == 'ADDED') {            } else if (data.type == "MODIFIED") {                    if ($scope.dc.metadata.name === data.object.metadata.name) {                        //alert(11)                        $scope.dc.status.updatedReplicas=data.object.status.updatedReplicas;                        $scope.dc.spec.replicas=data.object.spec.replicas;                        if ($scope.dc.spec.replicas === 0) {                            $scope.status.text='启动';                        }else {                            $scope.status.text='停止';                        }                        $scope.$apply()                    }            }        }        loadPods($scope.dc.metadata.name)        function loadPods(dc) {            var labelSelector = 'deploymentconfig=' + dc;            Pod.get({namespace: $scope.namespace, labelSelector: labelSelector}, function (pods) {                $scope.pods = pods;                angular.forEach($scope.pods.items, function (pod, i) {                    if (pod.spec.containers.length) {                        angular.forEach(pod.spec.containers, function (rongqi, k) {                            rongqi.podname = pod.metadata.name                        })                    }                })                console.log('$scope.pods', $scope.pods);            }, function (res) {            });        };        loadService($scope.dc)        function loadService(dc) {            Service.get({namespace: $rootScope.namespace, name: dc.metadata.name}, function (res) {                loadRoutes(dc);            }, function (res) {            });        };        function loadRoutes(dc) {            Route.get({namespace: $rootScope.namespace,name:dc.metadata.name}, function (res) {                $scope.dc.route=res;            }, function (res) {            });        };    }})();